### General properties of the game ###

# Only one value accepted
# Identifies the set of games defined in this file
simulation_name : Sim_5

# All the following properties in this file have 3 different possible assigment configuration:
# immediate number, ex: price_cpu: 0.5
# explicit list of values, ex: price_cpu: [0.5,06]
# implicit list of values with the format ['Initial_val:Final_val:amount_of_values'], ex, cpu_price: ['0.5:1:5']

max_cores_hosted: [44000] #44000


# Price per resource unit dollars/millicores for the whole investment period
prices:
  #fixed_cpu_price: True  # This represents your external variable

  # Prices to use when the external variable is true
  when_fixed:
    cpu_price: [0.5]  # Used if 'variable_cpu_price': False, if not it is ignored

  # Prices and settings to use when the external variable is false
  when_variable:
      # Following 3 work together and need equal amount of elements
      min_cores_hosted: [0]  # Min amount of cores hosted at the Edge
      min_cpu_price: [0.1]  # Price per unit when allocating max_cores_hosted resources
      max_cpu_price: [0.5]  # Price per unit when allocating min_cores_hosted


# This value is used if non-additive value function
# All three following values should have the same amount of values and the total amount of games will be multiplied for that amount

# Min amount of cores hosted at the Edge, this may make small coalition to have 0 value
#min_cores_hosted: [0,0]
# Max amount of cores hosted at the Edge

# This is the price per unit when allocating max_cores_hosted resources
#min_cpu_price: [0.5,1]
# This is the price per unit when allocating min_cores_hosted
#max_cpu_price: [50,100]


# Investment period, it can be a fraction to enable sensitivity analysis
years: [3]
# Amount of time slots in a day, used to calculate load and utilit functions
daily_timeslots: [96]


service_providers:
  - service_provider_name : ['SP1']

    #load_function:
    sigma: [0] # standard deviation for calculating the load, 0 will make the load function deterministic
    avg_load: [48530] # average load
    # hyperparameters: used to define the load function, a_k determining the amplitude (requests) and t_k the offset (time in seconds)
    a_k:
      - [-25313, 8832, -1757, 2873]
    t_k:
      - [47340, 49080, 44520, 44880]


    # utility_function:
    # benefit factor SPs gets from serving one unit of load at the edge
    benefit_factor: [1.5220700152207003e-06] #[1.5220700152207003e-06]
    # models the shape of the diminishing return, i.e. how fast it saturates to its upper bound
    xi: [0.08] # [0.08]

  - service_provider_name: ['SP2']
  #['SP2','SP3', 'SP4', 'SP5', 'SP6', 'SP7', 'SP8', 'SP9', 'SP10', 'SP11', 'SP12', 'SP13', 'SP14', 'SP15', 'SP16', 'SP17', 'SP18', 'SP19', 'SP20', 'SP21', 'SP22', 'SP23', 'SP24', 'SP25', 'SP26', 'SP27', 'SP28', 'SP29', 'SP30', 'SP31', 'SP32', 'SP33', 'SP34', 'SP35', 'SP36', 'SP37', 'SP38', 'SP39', 'SP40', 'SP41', 'SP42', 'SP43', 'SP44', 'SP45', 'SP46', 'SP47', 'SP48', 'SP49', 'SP50', 'SP51', 'SP52', 'SP53', 'SP54', 'SP55', 'SP56', 'SP57', 'SP58', 'SP59', 'SP60', 'SP61', 'SP62', 'SP63', 'SP64', 'SP65', 'SP66', 'SP67', 'SP68', 'SP69', 'SP70', 'SP71', 'SP72', 'SP73', 'SP74', 'SP75', 'SP76', 'SP77', 'SP78', 'SP79', 'SP80', 'SP81', 'SP82', 'SP83', 'SP84', 'SP85', 'SP86', 'SP87', 'SP88', 'SP89', 'SP90', 'SP91', 'SP92', 'SP93', 'SP94', 'SP95', 'SP96', 'SP97', 'SP98', 'SP99', 'SP100']

    # Load function
    sigma: [0]
    avg_load: [48530]
    a_k:
      - [25313, -8832, 1757, -2873]
    t_k:
      - [47340, 49080, 44520, 44880]
    # Utility function
    benefit_factor: [3.805175038051751e-07] #[3.805175038051751e-07]
    xi: [0.08] # [0.08]

        # True values, only one value accepted for each parameter, this won't increase the amount of games
    true_sigma: 0
    true_avg_load: 48530
    true_a_k:
      - [25313, -8832, 1757, -2873 ]
    true_t_k:
      - [ 47340, 49080, 44520, 44880 ]
        # Utility function
    true_benefit_factor: 1.5220700152207003e-06 #[ 1.610350076103502e-06 ]
    true_xi: 0.8 # [0.8 ]


#ORIGINAL CODE VALUES:

# Player 1 bf: 1.5220700152207003e-06
# Player 2 bf: 3.805175038051751e-07
# Both players:

# xi: 0.08
#avg_load: 48530
#a_k: [ 25313, -8832, 1757, -2873 ]
#t_k: [ 47340, 49080, 44520, 44880 ]
# CPU_price : 0.5